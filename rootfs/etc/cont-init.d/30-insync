!/command/with-contenv /bin/bash

INSYNC_1_DOWNLOAD=${INSYNC_1_DOWNLOAD:-"ms-office"}
INSYNC_2_DOWNLOAD=${INSYNC_2_DOWNLOAD:-"ms-office"}
INSYNC_3_DOWNLOAD=${INSYNC_3_DOWNLOAD:-"ms-office"}
INSYNC_4_DOWNLOAD=${INSYNC_4_DOWNLOAD:-"ms-office"}

# Link Insync config folder to /data
sudo -u abc mkdir -p /data/.config/
sudo -u abc [ -e "/home/abc/.config" ] && rm -fr /home/abc/.config
sudo -u abc ln -s /data/.config /home/abc/.config

# Sanity checks
if [ -z "${INSYNC_1_USERNAME}" ]; then
    echo "[ERROR] Please set your INSYNC_1_USERNAME variable with the Google Drive Account."
    echo "[ERROR] Exiting."
    exit 1
fi

# Before starting Insync we check which accounts needs to be added.
# We can't do that once Insync is started because DB file is locked.
declare -A ACCOUNTS_TO_ADD
INSYNC_DB_PATH="/data/.config/Insync/dbs/config.db"
NUM=`printenv | sort | grep '\INSYNC_.*_USERNAME' | wc -l`
for (( i = 1; i <= $NUM; i++ )); do
    INSYNC_USERNAME=INSYNC_${i}_USERNAME

    if test -f "$INSYNC_DB_PATH"; then
        RESULT=$(sqlite3 $INSYNC_DB_PATH "SELECT email FROM accounts where email='${!INSYNC_USERNAME}'")

        if [ "$RESULT" == "${!INSYNC_USERNAME}" ]; then
            ACCOUNTS_TO_ADD["${!INSYNC_USERNAME}"]="false"
        else
            ACCOUNTS_TO_ADD["${!INSYNC_USERNAME}"]="true"
        fi
    else
        ACCOUNTS_TO_ADD["${!INSYNC_USERNAME}"]="true"
    fi
done

echo '[INSYNC] Start Insync.'
insync start > /dev/null

while insync status | grep "Insync doesn't seem to be running." > /dev/null
do
    echo '[INSYNC] Waiting for Insync to start.'
    sleep 2s
done


get_friendly_name() {
  case $1 in
    gd)
      echo "GoogleDrive"
      ;;
    od)
      echo "OneDrive"
      ;;
    dx)
      echo "Dropbox"
      ;;
    *)
      echo "UnknownCloud"
      ;;
  esac
}

# Add accounts if they don't exist.
NUM=`printenv | sort | grep '\INSYNC_.*_USERNAME' | wc -l`
for (( i = 1; i <= $NUM; i++ )); do

    INSYNC_USERNAME=INSYNC_${i}_USERNAME
    INSYNC_DOWNLOAD=INSYNC_${i}_DOWNLOAD
    INSYNC_AUTH_CODE=INSYNC_${i}_AUTH_CODE
    INSYNC_CLOUD=INSYNC_${i}_CLOUD
    CLOUD_FRIENDLY_NAME=$(get_friendly_name ${!INSYNC_CLOUD})


    if [ "${ACCOUNTS_TO_ADD[${!INSYNC_USERNAME}]}" == "true" ]; then
        if [ -z "${!INSYNC_AUTH_CODE}" ]; then
            echo "[ERROR] No Authentication Code Provided for account ${!INSYNC_USERNAME}"
            echo "[ERROR] Visit https://insynchq.com/auth and follow the steps"
            exit 1
        fi

        sudo -u abc mkdir -p /data/${!INSYNC_USERNAME}
        echo "[INSYNC] Adding account ${!INSYNC_USERNAME}"
        RESULT=$(sudo -u abc bash -c "exec echo yes | /usr/bin/insync-headless account add -a ${!INSYNC_AUTH_CODE} -c ${!INSYNC_CLOUD} -p "/data/${!INSYNC_USERNAME}/${CLOUD_FRIENDLY_NAME}" -e ${!INSYNC_DOWNLOAD}")

        if echo $RESULT | grep 'error' > /dev/null; then
            echo "[ERROR] Fails to add account for ${!INSYNC_USERNAME}"
        fi
    else
        echo "[INSYNC] ${!INSYNC_USERNAME} already linked."
    fi
done

# Wait until at least one account start syncing
while insync status | grep 'UNLINKED' > /dev/null
do
    echo '[INSYNC] Waiting for Insync to initialize.'
    sleep 2s
done

# Do selective syncing
sleep 2s
NUM=`printenv | sort | grep '\INSYNC_.*_USERNAME' | wc -l`
for (( i = 1; i <= $NUM; i++ )); do
    INSYNC_USERNAME=INSYNC_${i}_USERNAME
    INSYNC_CLOUD=INSYNC_${i}_CLOUD
    INSYNC_DISABLE_SYNC=INSYNC_${i}_DISABLE_SYNC
    INSYNC_ENABLE_SYNC=INSYNC_${i}_ENABLE_SYNC

    echo "[INSYNC] Set selective sync for ${!INSYNC_USERNAME}"

    # Disable folders
    for GFOLDER_ID in $(echo ${!INSYNC_DISABLE_SYNC} | sed "s/,/ /g")
    do
        echo "[INSYNC] Disable $GFOLDER_ID"
        insync selective-sync -a ${!INSYNC_USERNAME} -c ${!INSYNC_CLOUD} ${GFOLDER_ID} no
    done

    # Enable folders
    for GFOLDER_ID in $(echo ${!INSYNC_ENABLE_SYNC} | sed "s/,/ /g")
    do
        echo "[INSYNC] Enable $GFOLDER_ID"
        insync selective-sync -a ${!INSYNC_USERNAME} -c ${!INSYNC_CLOUD} ${GFOLDER_ID} yes
    done
done

insync quit > /dev/null
